# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=60.0)
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 0.0), point2=(
    30.0, 0.0))
mdb.models['Model-1'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0])
mdb.models['Model-1'].sketches['__profile__'].ObliqueDimension(textPoint=(
    10.5259304046631, -3.37135314941406), value=30.0, vertex1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], vertex2=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1])
mdb.models['Model-1'].Part(dimensionality=TWO_D_PLANAR, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseWire(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].GeneralizedProfile(area=0.001, gammaO=0.0, gammaW=0.0, 
    i11=0.0005, i12=0.0, i22=0.0, j=0.0, name='Profile-1')
mdb.models['Model-1'].GeneralizedProfile(area=0.0001, gammaO=0.0, gammaW=0.0, 
    i11=0.001, i12=0.0, i22=0.0, j=0.0, name='Profile-2')
mdb.models['Model-1'].parts['Part-1'].DatumPointByCoordinate(coords=(10.0, 0.0, 
    0.0))
mdb.models['Model-1'].parts['Part-1'].PartitionEdgeByPoint(edge=
    mdb.models['Model-1'].parts['Part-1'].edges[0], point=
    mdb.models['Model-1'].parts['Part-1'].datums[2])
mdb.models['Model-1'].BeamSection(alphaDamping=0.0, beamShape=CONSTANT, 
    betaDamping=0.0, centroid=(0.0, 0.0), compositeDamping=0.0, 
    consistentMassMatrix=False, dependencies=0, integration=BEFORE_ANALYSIS, 
    name='Section-1', poissonRatio=0.25, profile='Profile-1', shearCenter=(0.0, 
    0.0), table=((200000000000.0, 80000000000.0), ), temperatureDependency=OFF, 
    thermalExpansion=OFF)
mdb.models['Model-1'].BeamSection(alphaDamping=0.0, beamShape=CONSTANT, 
    betaDamping=0.0, centroid=(0.0, 0.0), compositeDamping=0.0, 
    consistentMassMatrix=False, dependencies=0, integration=BEFORE_ANALYSIS, 
    name='Section-2', poissonRatio=0.25, profile='Profile-2', shearCenter=(0.0, 
    0.0), table=((200000000000.0, 80000000000.0), ), temperatureDependency=OFF, 
    thermalExpansion=OFF)
mdb.models['Model-1'].parts['Part-1'].Set(edges=
    mdb.models['Model-1'].parts['Part-1'].edges.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-1')
mdb.models['Model-1'].parts['Part-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-1'].sets['Set-1'], sectionName=
    'Section-1', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Part-1'].Set(edges=
    mdb.models['Model-1'].parts['Part-1'].edges.getSequenceFromMask(('[#2 ]', 
    ), ), name='Set-2')
mdb.models['Model-1'].parts['Part-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-1'].sets['Set-2'], sectionName=
    'Section-2', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].StaticStep(name='Step-1', previous='Initial')
mdb.models['Model-1'].rootAssembly.Set(name='Set-1', vertices=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-1'], u1=0.0, 
    u2=0.0, ur3=UNSET)
mdb.models['Model-1'].rootAssembly.Set(name='Set-2', vertices=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices.getSequenceFromMask(
    ('[#2 ]', ), ))
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-2'], u1=UNSET, 
    u2=0.0, ur3=UNSET)
mdb.models['Model-1'].rootAssembly.Set(name='Set-3', vertices=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].vertices.getSequenceFromMask(
    ('[#4 ]', ), ))
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-3', region=mdb.models['Model-1'].rootAssembly.sets['Set-3'], u1=UNSET, 
    u2=0.0, ur3=UNSET)
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges.getSequenceFromMask(
    ('[#3 ]', ), ), name='Set-4')
mdb.models['Model-1'].LineLoad(comp2=-3000.0, createStepName='Step-1', name=
    'Load-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-4'])
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ), size=0.5)
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=B23, elemLibrary=STANDARD), ), regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges.getSequenceFromMask(
    ('[#3 ]', ), ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], ))
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='28', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.models['Model-1'].parts['Part-1'].Set(edges=
    mdb.models['Model-1'].parts['Part-1'].edges.getSequenceFromMask(('[#1 ]', 
    ), ), name='Set-3')
mdb.models['Model-1'].parts['Part-1'].assignBeamSectionOrientation(method=
    N1_COSINES, n1=(0.0, 0.0, -1.0), region=
    mdb.models['Model-1'].parts['Part-1'].sets['Set-3'])
mdb.models['Model-1'].parts['Part-1'].Set(edges=
    mdb.models['Model-1'].parts['Part-1'].edges.getSequenceFromMask(('[#2 ]', 
    ), ), name='Set-4')
mdb.models['Model-1'].parts['Part-1'].assignBeamSectionOrientation(method=
    N1_COSINES, n1=(0.0, 0.0, -1.0), region=
    mdb.models['Model-1'].parts['Part-1'].sets['Set-4'])
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.jobs['28']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='28', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['28'].submit(consistencyChecking=OFF)
mdb.jobs['28']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'Atabak', 'handle': 0, 'jobName': '28'})
mdb.jobs['28']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\ASUS\\Desktop\\28.odb', 'jobName': '28'})
mdb.jobs['28']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '28'})
mdb.jobs['28']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'Atabak', 'handle': 22200, 'jobName': '28'})
mdb.jobs['28']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '28'})
mdb.jobs['28']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '28'})
mdb.jobs['28']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '28', 'memory': 29.0})
mdb.jobs['28']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8044.0, 'jobName': '28'})
mdb.jobs['28']._Message(MINIMUM_MEMORY, {'minimum_memory': 22.0, 
    'phase': STANDARD_PHASE, 'jobName': '28'})
mdb.jobs['28']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '28'})
mdb.jobs['28']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '28', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['28']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '28'})
mdb.jobs['28']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '28'})
mdb.jobs['28']._Message(JOB_COMPLETED, {'time': 'Sun Mar 14 22:50:21 2021', 
    'jobName': '28'})
# Save by ASUS on 2021_03_14-22.55.35; build 2020 2019_09_13-22.19.31 163176
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='Job-2', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
del mdb.jobs['28']
del mdb.jobs['Job-2']
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='28', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['28'].submit(consistencyChecking=OFF)
mdb.jobs['28']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'Atabak', 'handle': 0, 'jobName': '28'})
mdb.jobs['28']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\Users\\ASUS\\Desktop\\28\\28.odb', 'jobName': '28'})
mdb.jobs['28']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '28'})
mdb.jobs['28']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'Atabak', 'handle': 1056, 'jobName': '28'})
mdb.jobs['28']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '28'})
mdb.jobs['28']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': '28'})
mdb.jobs['28']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': '28', 'memory': 29.0})
mdb.jobs['28']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8044.0, 'jobName': '28'})
mdb.jobs['28']._Message(MINIMUM_MEMORY, {'minimum_memory': 22.0, 
    'phase': STANDARD_PHASE, 'jobName': '28'})
mdb.jobs['28']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': '28'})
mdb.jobs['28']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': '28', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['28']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': '28'})
mdb.jobs['28']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': '28'})
mdb.jobs['28']._Message(JOB_COMPLETED, {'time': 'Sun Mar 14 22:58:46 2021', 
    'jobName': '28'})
# Save by ASUS on 2021_03_14-23.03.11; build 2020 2019_09_13-22.19.31 163176
